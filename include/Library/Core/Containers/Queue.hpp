////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @project        Open Space Toolkit ▸ Core
/// @file           Library/Core/Containers/Graph.hpp
/// @author         Lucas Brémond <lucas@loftorbital.com>
/// @license        Apache License 2.0

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __Library_Core_Containers_Graph__
#define __Library_Core_Containers_Graph__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace library
{
namespace core
{
namespace ctnr
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @brief                      First-in, first-out (FIFO) container

class Queue
{

    public:

                                Queue                                       ( ) = delete ;

                                Queue                                       (   const   Queue&                      aQueue                                      ) ;

                                ~Queue                                      ( ) ;

        Queue&                  operator =                                  (   const   Queue&                      aQueue                                      ) const ;

        friend std::ostream&    operator <<                                 (           std::ostream&               anOutputStream,
                                                                                const   Queue&                      aQueue                                      ) ;

        bool                    isDefined                                   ( ) const ;

        static Queue            Empty                                       ( ) ;

        static Queue            Object                                      (   const   Object&                     anObject                                    ) ;

    private:

        // [TBI]

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
