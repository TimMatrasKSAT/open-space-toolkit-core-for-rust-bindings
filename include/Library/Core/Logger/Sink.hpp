////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @project        Open Space Toolkit ▸ Core
/// @file           Library/Core/Logger/Sink.hpp
/// @author         Lucas Brémond <lucas@loftorbital.com>
/// @license        Apache License 2.0

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __OpenSpaceToolkit_Core_Logger_Sink__
#define __OpenSpaceToolkit_Core_Logger_Sink__

#include <Library/Core/Types/Unique.hpp>
#include <Library/Core/Types/String.hpp>
#include <Library/Core/Logger/Severity.hpp>
#include <Library/Core/Logger/Sinks/Sink.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace library
{
namespace core
{
namespace logger
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using library::core::types::Unique ;
using library::core::types::String ;
using library::core::logger::Severity ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @brief                      Log sink

class Sink
{

    public:

                                Sink                                        (   const   sinks::Sink&                aSink                                       ) ;

                                Sink                                        (   const   Sink&                       aSink                                       ) ;

        void                    enable                                      ( ) ;
        void                    disable                                     ( ) ;

        void                    addChannel                                  (   const   String&                     aChannel                                    ) ;
        void                    removeChannel                               (   const   String&                     aChannel                                    ) ;

        static Sink             Console                                     (   const   Severity&                   aSeverity                                   ) ;

    private:

        Unique<sinks::Sink>     sinkUPtr_ ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
